# Build lua-xz on Windows
# through nmake from
# Microsoft Visual Studio C/C++ (MSVC)
# developer prompt.

#################################
# Usage                         #
#################################

# From Visual Studio developer prompt:

# 1. Standalone
#     nmake /F Makefile.msvc LIBLZMA_DIR=C:\path\to\liblmza LUA_DIR=C:\path\to\lua LUA_MAJOR_VERSION=5 LUA_MINOR_VERSION=4
#     nmake /F Makefile.msvc LIBLZMA_DIR=C:\path\to\liblmza LUA_DIR=C:\path\to\lua LUA_MAJOR_VERSION=5 LUA_MINOR_VERSION=4 install

# 2. Module (like LuaRocks)
#     nmake /F Makefile.msvc LIBLZMA_DIR=C:\path\to\liblmza LUA_DIR=C:\path\to\lua LUA_MAJOR_VERSION=5 LUA_MINOR_VERSION=4
#     nmake /F Makefile.msvc LIBLZMA_DIR=C:\path\to\liblmza LUA_DIR=C:\path\to\lua LUA_MAJOR_VERSION=5 LUA_MINOR_VERSION=4 install-module

#################################
# Editable settings             #
#################################

# Build settings
# for a standalone build.
# This means you want
# to embeded lua-xz
# on your app out of
# LuaRocks.
SYSTEMDRIVE = C:
prefix = $(SYSTEMDRIVE)\lua-xz
bindir = $(prefix)\bin
incdir = $(prefix)\include
libdir = $(prefix)\lib

# liblzma settings
#   Note: all variables
#     beginning with LIBLZMA_*
#     can be edited
#     to suit your liblzma
#     installation
LIBLZMA_DIR = $(SYSTEMDRIVE)\external
LIBLZMA_INCDIR = $(LIBLZMA_DIR)\include
LIBLZMA_LIBDIR = $(LIBLZMA_DIR)\lib
LIBLZMA_LIB = lzma.$(IMPLIB_EXTENSION)

# Lua settings
#   Note: all variables
#     beginning with LUA_*
#     can be edited
#     to suit your Lua
#     installation
LUA_MAJOR_VERSION = 5
LUA_MINOR_VERSION = 4
LUA_SHORT_VERSION = $(LUA_MAJOR_VERSION)$(LUA_MINOR_VERSION)
LUA_VERSION = $(LUA_MAJOR_VERSION).$(LUA_MINOR_VERSION)
LUA_DIR = $(SYSTEMDRIVE)\Lua
LUA_BINDIR = $(LUA_DIR)\bin
LUA_INCDIR = $(LUA_DIR)\include
LUA_LIBDIR = $(LUA_DIR)\lib
LUA_SHARE = $(LUA_DIR)\share
LUA_LIB_SUFFIX = $(LUA_SHORT_VERSION).$(IMPLIB_EXTENSION)
LUA_LIB = lua$(LUA_LIB_SUFFIX)

!IF (($(LUA_MAJOR_VERSION)==5) && ($(LUA_MINOR_VERSION)<= 2))
LUA_LMOD = $(LUA_BINDIR)\lua
LUA_CMOD = $(LUA_BINDIR)
!ELSE
LUA_LMOD = $(LUA_SHARE)\lua\$(LUA_VERSION)
LUA_CMOD = $(LUA_LIBDIR)\lua\$(LUA_VERSION)
!ENDIF

#################################
# DO NOT edit below             #
#################################

# generic settings
OBJ_EXTENSION = obj
SHARED_LIB_EXTENSION = dll
STATIC_LIB_EXTENSION = lib
IMPLIB_EXTENSION = lib
EXP_EXTENSION = exp
LUA_XZ_NAME = lua-xz
LUA_XZ_OUTPUT_SHARED_LIB = $(LUA_XZ_NAME).$(SHARED_LIB_EXTENSION)
LUA_XZ_OUTPUT_SHARED_IMPLIB = $(LUA_XZ_NAME).$(IMPLIB_EXTENSION)
LUA_XZ_OUTPUT_SHARED_EXP = $(LUA_XZ_NAME).$(EXP_EXTENSION)
LUA_XZ_OUTPUT_STATIC_LIB = $(LUA_XZ_NAME)-static.$(STATIC_LIB_EXTENSION)
LUA_XZ_SRC_DIR = src
LUA_XZ_DEF = $(LUA_XZ_NAME).def
LUA_XZ_SRC_FILES = $(LUA_XZ_SRC_DIR)\$(LUA_XZ_NAME).c
LUA_XZ_HEADER_NAME = $(LUA_XZ_NAME).h
LUA_XZ_HEADER_FILES = $(LUA_XZ_SRC_DIR)\$(LUA_XZ_HEADER_NAME)
LUA_XZ_SHARED_OBJ_FILES = $(LUA_XZ_SRC_DIR)\$(LUA_XZ_NAME)-shared.$(OBJ_EXTENSION)
LUA_XZ_STATIC_OBJ_FILES = $(LUA_XZ_SRC_DIR)\$(LUA_XZ_NAME)-static.$(OBJ_EXTENSION)
CC = cl
CFLAGS = /nologo /c /O2 /W3 /MD
INCLUDES = /I$(LUA_XZ_SRC_DIR) "/I$(LUA_INCDIR)" "/I$(LIBLZMA_INCDIR)"
SHARED_DEFINES = /DNDEBUG /D_NDEBUG /DLUA_XZ_BUILD_SHARED
STATIC_DEFINES = /DNDEBUG /D_NDEBUG /DLUA_XZ_BUILD_STATIC
LD = link
LDFLAGS = /nologo /DLL
LIBS = "/LIBPATH:$(LUA_LIBDIR)" "/LIBPATH:$(LIBLZMA_LIBDIR)" $(LIBLZMA_LIB) $(LUA_LIB)
AR = lib
ARFLAGS = /nologo

RM_F = DEL /F
RM_RF = RMDIR /S /Q
INSTALL = COPY
MKDIR = MKDIR

# targets
all: clean-shared $(LUA_XZ_OUTPUT_SHARED_LIB) clean-static $(LUA_XZ_OUTPUT_STATIC_LIB)

$(LUA_XZ_OUTPUT_SHARED_LIB): $(LUA_XZ_SHARED_OBJ_FILES)
	$(LD) $(LDFLAGS) /DEF:$(LUA_XZ_DEF) /IMPLIB:$(LUA_XZ_OUTPUT_SHARED_IMPLIB) /OUT:$@ $** $(LIBS)

$(LUA_XZ_OUTPUT_STATIC_LIB): $(LUA_XZ_STATIC_OBJ_FILES)
	$(AR) $(ARFLAGS) /OUT:$@ $**

$(LUA_XZ_SHARED_OBJ_FILES): $(LUA_XZ_SRC_FILES)
	$(CC) $(CFLAGS) $(SHARED_DEFINES) $(INCLUDES) /Fo$@ $**

$(LUA_XZ_STATIC_OBJ_FILES): $(LUA_XZ_SRC_FILES)
	$(CC) $(CFLAGS) $(STATIC_DEFINES) $(INCLUDES) /Fo$@ $**

install: install-standalone

install-standalone: $(LUA_XZ_OUTPUT_SHARED_LIB) $(LUA_XZ_OUTPUT_STATIC_LIB)
	@IF NOT EXIST "$(prefix)\" @$(MKDIR) "$(prefix)"
	@IF NOT EXIST "$(bindir)\" @$(MKDIR) "$(bindir)"
	@IF NOT EXIST "$(incdir)\" @$(MKDIR) "$(incdir)"
	@IF NOT EXIST "$(libdir)\" @$(MKDIR) "$(libdir)"
	@IF EXIST "$(bindir)\$(LUA_XZ_OUTPUT_SHARED_LIB)" $(RM_F) "$(bindir)\$(LUA_XZ_OUTPUT_SHARED_LIB)"
	@FOR %I IN ($(LUA_XZ_HEADER_FILES)) DO @IF EXIST "$(incdir)\%I" $(RM_F) "$(incdir)\%I"
	@IF EXIST "$(libdir)\$(LUA_XZ_OUTPUT_SHARED_IMPLIB)" $(RM_F) "$(libdir)\$(LUA_XZ_OUTPUT_SHARED_IMPLIB)"
	@IF EXIST "$(libdir)\$(LUA_XZ_OUTPUT_STATIC_LIB)" $(RM_F) "$(libdir)\$(LUA_XZ_OUTPUT_STATIC_LIB)"
	@ECHO Installing $(LUA_XZ_NAME) at $(prefix)
	@$(INSTALL) $(LUA_XZ_OUTPUT_SHARED_LIB) "$(bindir)\"
	@FOR %I IN ($(LUA_XZ_HEADER_FILES)) DO @$(INSTALL) $(LUA_XZ_HEADER_FILES) "$(incdir)\"
	@$(INSTALL) $(LUA_XZ_OUTPUT_SHARED_IMPLIB) "$(libdir)\"
	@$(INSTALL) $(LUA_XZ_OUTPUT_STATIC_LIB) "$(libdir)\"
	@ECHO Installation finished successfully.

install-module: $(LUA_XZ_OUTPUT_SHARED_LIB) $(LUA_XZ_OUTPUT_STATIC_LIB)
	@IF NOT EXIST "$(LUA_DIR)\" @$(MKDIR) "$(LUA_DIR)"
	@IF NOT EXIST "$(LUA_BINDIR)\" @$(MKDIR) "$(LUA_BINDIR)"
	@IF NOT EXIST "$(LUA_LIBDIR)\" @$(MKDIR) "$(LUA_LIBDIR)"
	@IF NOT EXIST "$(LUA_CMOD)\" @$(MKDIR) "$(LUA_CMOD)"
	@IF EXIST "$(LUA_CMOD)\$(LUA_XZ_OUTPUT_SHARED_LIB)" $(RM_F) "$(LUA_CMOD)\$(LUA_XZ_OUTPUT_SHARED_LIB)"
	@ECHO Installing $(LUA_XZ_NAME) at $(LUA_CMOD)
	@$(INSTALL) $(LUA_XZ_OUTPUT_SHARED_LIB) "$(LUA_CMOD)\"
	@ECHO Installation finished successfully.

uninstall: uninstall-standalone

uninstall-standalone:
	@IF EXIST "$(bindir)\$(LUA_XZ_OUTPUT_SHARED_LIB)" $(RM_F) "$(bindir)\$(LUA_XZ_OUTPUT_SHARED_LIB)"
	@FOR %I IN ($(LUA_XZ_HEADER_FILES)) DO @IF EXIST "$(incdir)\%I" $(RM_F) "$(incdir)\%I"
	@IF EXIST "$(libdir)\$(LUA_XZ_OUTPUT_SHARED_IMPLIB)" $(RM_F) "$(libdir)\$(LUA_XZ_OUTPUT_SHARED_IMPLIB)"
	@IF EXIST "$(libdir)\$(LUA_XZ_OUTPUT_STATIC_LIB)" $(RM_F) "$(libdir)\$(LUA_XZ_OUTPUT_STATIC_LIB)"

uninstall-module:
	@IF EXIST "$(LUA_CMOD)\$(LUA_XZ_OUTPUT_SHARED_LIB)" $(RM_F) "$(LUA_CMOD)\$(LUA_XZ_OUTPUT_SHARED_LIB)"

clean: clean-shared clean-static

clean-shared:
	@FOR %I IN ($(LUA_XZ_SHARED_OBJ_FILES) $(LUA_XZ_OUTPUT_SHARED_LIB) $(LUA_XZ_OUTPUT_SHARED_IMPLIB) $(LUA_XZ_OUTPUT_SHARED_EXP)) DO @IF EXIST %I $(RM_F) %I

clean-static:
	@FOR %I IN ($(LUA_XZ_STATIC_OBJ_FILES) $(LUA_XZ_OUTPUT_STATIC_LIB)) DO @IF EXIST %I $(RM_F) %I
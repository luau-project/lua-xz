# Build lua-xz on Windows
# through GNU Make (mingw32-make) from
# usual `cmd' prompt for
# the MinGw / MinGW-w64 toolchain.

#################################
# Usage                         #
#################################

# From `cmd':

# 1. Standalone
#     mingw32-make -f Makefile.mingw LIBLZMA_DIR=C:\path\to\liblmza LUA_DIR=C:\path\to\lua
#     mingw32-make -f Makefile.mingw LIBLZMA_DIR=C:\path\to\liblmza LUA_DIR=C:\path\to\lua install

# 2. Module (like LuaRocks)
#     mingw32-make -f Makefile.mingw LIBLZMA_DIR=C:\path\to\liblmza LUA_DIR=C:\path\to\lua
#     mingw32-make -f Makefile.mingw LIBLZMA_DIR=C:\path\to\liblmza LUA_DIR=C:\path\to\lua install-module

#################################
# Editable settings             #
#################################

# Build settings
# for a standalone build.
# This means you want
# to embeded lua-xz
# on your app out of
# LuaRocks.
SystemDrive = C:
prefix = $(SystemDrive)/lua-xz
bindir = $(prefix)/bin
incdir = $(prefix)/include
libdir = $(prefix)/lib

# liblzma settings
#   Note: all variables
#     beginning with LIBLZMA_*
#     can be edited
#     to suit your liblzma
#     installation
LIBLZMA_DIR = $(SystemDrive)/external
LIBLZMA_INCDIR = $(LIBLZMA_DIR)/include
LIBLZMA_LIBDIR = $(LIBLZMA_DIR)/lib
LIBLZMA_LIB = lzma

# Lua settings
#   Note: all variables
#     beginning with LUA_*
#     can be edited
#     to suit your Lua
#     installation
LUA_MAJOR_VERSION = 5
LUA_MINOR_VERSION = 4
LUA_SHORT_VERSION = $(LUA_MAJOR_VERSION)$(LUA_MINOR_VERSION)
LUA_VERSION = $(LUA_MAJOR_VERSION).$(LUA_MINOR_VERSION)
LUA_DIR = $(SystemDrive)/Lua
LUA_BINDIR = $(LUA_DIR)/bin
LUA_INCDIR = $(LUA_DIR)/include
LUA_LIBDIR = $(LUA_DIR)/lib
LUA_SHARE = $(LUA_DIR)/share
LUA_LIB_SUFFIX = $(LUA_SHORT_VERSION)
LUA_LIB = lua$(LUA_LIB_SUFFIX)

ifneq ($(filter $(LUA_MAJOR_VERSION),1 2 3 4),)
	$(error Unsupported major version of Lua)
endif

ifeq ($(LUA_MAJOR_VERSION),5)
ifneq ($(filter $(LUA_MINOR_VERSION),1 2),)
LUA_LMOD = $(LUA_BINDIR)/lua
LUA_CMOD = $(LUA_BINDIR)
endif
LUA_LMOD = $(LUA_SHARE)/$(LUA_VERSION)
LUA_CMOD = $(LUA_LIBDIR)/$(LUA_VERSION)
else
LUA_LMOD = $(LUA_SHARE)/$(LUA_VERSION)
LUA_CMOD = $(LUA_LIBDIR)/$(LUA_VERSION)
endif

#################################
# DO NOT edit below             #
#################################

# generic settings
SHELL = $(WINDIR)/System32/cmd.exe
PERCENT = %
PERCENT_MOD = $(PERCENT)$(PERCENT)
OBJ_EXTENSION = o
SHARED_LIB_EXTENSION = dll
STATIC_LIB_EXTENSION = a
IMPLIB_EXTENSION = dll.a
LUA_XZ_NAME = lua-xz
LUA_XZ_OUTPUT_SHARED_LIB = $(LUA_XZ_NAME).$(SHARED_LIB_EXTENSION)
LUA_XZ_OUTPUT_SHARED_IMPLIB = $(LUA_XZ_NAME).$(IMPLIB_EXTENSION)
LUA_XZ_OUTPUT_STATIC_LIB = $(LUA_XZ_NAME)-static.$(STATIC_LIB_EXTENSION)
LUA_XZ_SRC_DIR = src
LUA_XZ_DEF = $(LUA_XZ_NAME).def
LUA_XZ_SRC_FILES = $(LUA_XZ_SRC_DIR)/$(LUA_XZ_NAME).c
LUA_XZ_HEADER_NAME = $(LUA_XZ_NAME).h
LUA_XZ_HEADER_FILES = $(LUA_XZ_SRC_DIR)/$(LUA_XZ_HEADER_NAME)
LUA_XZ_SHARED_OBJ_FILES = $(LUA_XZ_SRC_DIR)/$(LUA_XZ_NAME)-shared.$(OBJ_EXTENSION)
LUA_XZ_STATIC_OBJ_FILES = $(LUA_XZ_SRC_DIR)/$(LUA_XZ_NAME)-static.$(OBJ_EXTENSION)
MINGW_TRIPLET_PREFIX =
CC = $(MINGW_TRIPLET_PREFIX)gcc
SHARED_CFLAGS = -g -c -fPIC -O2 -Wall
STATIC_CFLAGS = -g -c -O2 -Wall
INCLUDES = -I$(LUA_XZ_SRC_DIR) "-I$(LUA_INCDIR)" "-I$(LIBLZMA_INCDIR)"
SHARED_DEFINES = -DNDEBUG -D_NDEBUG -DLUA_XZ_BUILD_SHARED
STATIC_DEFINES = -DNDEBUG -D_NDEBUG -DLUA_XZ_BUILD_STATIC
LD = $(CC)
LDFLAGS = -shared
LIBS = "-L$(LUA_LIBDIR)" "-L$(LIBLZMA_LIBDIR)" -l$(LIBLZMA_LIB) -l$(LUA_LIB)
AR = $(MINGW_TRIPLET_PREFIX)ar
ARFLAGS = cru
RANLIB = $(MINGW_TRIPLET_PREFIX)ranlib

RM_F = DEL
RM_RF = RMDIR
INSTALL = COPY
MKDIR = MKDIR

# targets

.PHONY: all install install-standalone install-module uninstall uninstall-standalone uninstall-module clean clean-shared clean-static
all: clean-shared $(LUA_XZ_OUTPUT_SHARED_LIB) clean-static $(LUA_XZ_OUTPUT_STATIC_LIB)

$(LUA_XZ_OUTPUT_SHARED_LIB): $(LUA_XZ_SHARED_OBJ_FILES) $(LUA_XZ_DEF)
	$(LD) $(LDFLAGS) -Wl,--out-implib,$(LUA_XZ_OUTPUT_SHARED_IMPLIB) -o $@ $^ $(LIBS)

$(LUA_XZ_OUTPUT_STATIC_LIB): $(LUA_XZ_STATIC_OBJ_FILES)
	$(AR) $(ARFLAGS) $@ $<
	$(RANLIB) $@

$(LUA_XZ_SHARED_OBJ_FILES): $(LUA_XZ_SRC_FILES)
	$(CC) $(SHARED_CFLAGS) $(SHARED_DEFINES) $(INCLUDES) -o $@ $<

$(LUA_XZ_STATIC_OBJ_FILES): $(LUA_XZ_SRC_FILES)
	$(CC) $(STATIC_CFLAGS) $(STATIC_DEFINES) $(INCLUDES) -o $@ $<

install: install-standalone

install-standalone: $(LUA_XZ_OUTPUT_SHARED_LIB) $(LUA_XZ_OUTPUT_STATIC_LIB)
	@cmd /E:OFF /C IF NOT EXIST "$(subst /,\,$(prefix)/)" $(MKDIR) "$(subst /,\,$(prefix))"
	@cmd /E:OFF /C IF NOT EXIST "$(subst /,\,$(bindir)/)" $(MKDIR) "$(subst /,\,$(bindir))"
	@cmd /E:OFF /C IF NOT EXIST "$(subst /,\,$(incdir)/)" $(MKDIR) "$(subst /,\,$(incdir))"
	@cmd /E:OFF /C IF NOT EXIST "$(subst /,\,$(libdir)/)" $(MKDIR) "$(subst /,\,$(libdir))"
	@cmd /E:OFF /C IF EXIST "$(subst /,\,$(bindir)/$(LUA_XZ_OUTPUT_SHARED_LIB))" $(RM_F) "$(subst /,\,$(bindir)/$(LUA_XZ_OUTPUT_SHARED_LIB))"
	@cmd /E:OFF /C FOR $(PERCENT_MOD)I IN ($(subst /,\,$(LUA_XZ_HEADER_FILES))) DO @IF EXIST "$(subst /,\,$(incdir)/$(PERCENT_MOD)I)" $(RM_F) "$(subst /,\,$(incdir)/$(PERCENT_MOD)I)"
	@cmd /E:OFF /C IF EXIST "$(subst /,\,$(libdir)/$(LUA_XZ_OUTPUT_SHARED_IMPLIB))" $(RM_F) "$(subst /,\,$(libdir)/$(LUA_XZ_OUTPUT_SHARED_IMPLIB))"
	@cmd /E:OFF /C IF EXIST "$(subst /,\,$(libdir)/$(LUA_XZ_OUTPUT_STATIC_LIB))" $(RM_F) "$(subst /,\,$(libdir)/$(LUA_XZ_OUTPUT_STATIC_LIB))"
	@cmd /E:OFF /C ECHO Installing $(LUA_XZ_NAME) at $(subst /,\,$(prefix))
	@cmd /E:OFF /C $(INSTALL) $(subst /,\,$(LUA_XZ_OUTPUT_SHARED_LIB)) "$(subst /,\,$(bindir)/)"
	@cmd /E:OFF /C FOR $(PERCENT_MOD)I IN ($(subst /,\,$(LUA_XZ_HEADER_FILES))) DO @$(INSTALL) "$(PERCENT_MOD)I" "$(subst /,\,$(incdir)/)"
	@cmd /E:OFF /C $(INSTALL) $(subst /,\,$(LUA_XZ_OUTPUT_SHARED_IMPLIB)) "$(subst /,\,$(libdir)/)"
	@cmd /E:OFF /C $(INSTALL) $(subst /,\,$(LUA_XZ_OUTPUT_STATIC_LIB)) "$(subst /,\,$(libdir)/)"
	@cmd /E:OFF /C ECHO Installation finished successfully.

install-module: $(LUA_XZ_OUTPUT_SHARED_LIB) $(LUA_XZ_OUTPUT_STATIC_LIB)
	@cmd /E:OFF /C IF NOT EXIST "$(subst /,\,$(LUA_DIR)/)" $(MKDIR) "$(subst /,\,$(LUA_DIR))"
	@cmd /E:OFF /C IF NOT EXIST "$(subst /,\,$(LUA_BINDIR)/)" $(MKDIR) "$(subst /,\,$(LUA_BINDIR))"
	@cmd /E:OFF /C IF NOT EXIST "$(subst /,\,$(LUA_LIBDIR)/)" $(MKDIR) "$(subst /,\,$(LUA_LIBDIR))"
	@cmd /E:OFF /C IF NOT EXIST "$(subst /,\,$(LUA_CMOD)/)" $(MKDIR) "$(subst /,\,$(LUA_CMOD))"
	@cmd /E:OFF /C IF EXIST "$(subst /,\,$(LUA_CMOD)/$(LUA_XZ_OUTPUT_SHARED_LIB))" $(RM_F) "$(subst /,\,$(LUA_CMOD)/$(LUA_XZ_OUTPUT_SHARED_LIB))"
	@cmd /E:OFF /C ECHO Installing $(subst /,\,$(LUA_XZ_NAME)) at $(subst /,\,$(LUA_CMOD))
	@cmd /E:OFF /C $(INSTALL) $(subst /,\,$(LUA_XZ_OUTPUT_SHARED_LIB)) "$(subst /,\,$(LUA_CMOD)/)"
	@cmd /E:OFF /C ECHO Installation finished successfully.

uninstall: uninstall-standalone

uninstall-standalone:
	@cmd /E:OFF /C IF EXIST "$(subst /,\,$(bindir)/$(LUA_XZ_OUTPUT_SHARED_LIB))" $(RM_F) "$(subst /,\,$(bindir)/$(LUA_XZ_OUTPUT_SHARED_LIB))"
	@cmd /E:OFF /C FOR $(PERCENT_MOD)I IN ($(subst /,\,$(LUA_XZ_HEADER_FILES))) DO @IF EXIST "$(subst /,\,$(incdir)/$(PERCENT_MOD)I)" $(RM_F) "$(subst /,\,$(incdir)/$(PERCENT_MOD)I)"
	@cmd /E:OFF /C IF EXIST "$(subst /,\,$(libdir)/$(LUA_XZ_OUTPUT_SHARED_IMPLIB))" $(RM_F) "$(subst /,\,$(libdir)/$(LUA_XZ_OUTPUT_SHARED_IMPLIB))"
	@cmd /E:OFF /C IF EXIST "$(subst /,\,$(libdir)/$(LUA_XZ_OUTPUT_STATIC_LIB))" $(RM_F) "$(subst /,\,$(libdir)/$(LUA_XZ_OUTPUT_STATIC_LIB))"

uninstall-module:
	@cmd /E:OFF /C IF EXIST "$(subst /,\,$(LUA_CMOD)/$(LUA_XZ_OUTPUT_SHARED_LIB))" $(RM_F) "$(subst /,\,$(LUA_CMOD)/$(LUA_XZ_OUTPUT_SHARED_LIB))"

clean: clean-shared clean-static

clean-shared:
	@cmd /E:OFF /C FOR $(PERCENT_MOD)I IN ($(subst /,\,$(LUA_XZ_SHARED_OBJ_FILES)) $(subst /,\,$(LUA_XZ_OUTPUT_SHARED_LIB)) $(subst /,\,$(LUA_XZ_OUTPUT_SHARED_IMPLIB))) DO @IF EXIST "$(PERCENT_MOD)I" $(RM_F) "$(PERCENT_MOD)I"

clean-static:
	@cmd /E:OFF /C FOR $(PERCENT_MOD)I IN ($(subst /,\,$(LUA_XZ_STATIC_OBJ_FILES)) $(subst /,\,$(LUA_XZ_OUTPUT_STATIC_LIB))) DO @IF EXIST "$(PERCENT_MOD)I" $(RM_F) "$(PERCENT_MOD)I"